---
layout: 'home'
title: Don't Worry Chicken Curry
---

<section class="homepage-section">
    <div>
        <h1 style="margin-bottom: 2em;">
            Don't Worry
            <br>
            <span class="accent home-title-span">Chicken Curry</span>
        </h1>

        <p class="mb-16"><strong>Tried and tested recipes to enjoy</strong> üçå</p>

        <p class="homepage-section__links">
            <a href="#list" class="homepage-section__link">üßæ Recipe List</a>
            <a href="#search" class="homepage-section__link">üîç Search by ingredient</a>
            <a href="#favourites" class="homepage-section__link">‚≠ê My Favourites</a>
        </p>
    </div>
</section>

<hr/>

<section x-data="tags()" class="homepage-section" id="list">
    <div class="items-stretch">
        <p class="bold mb-0">Diet:</p>
        <ul class="mb-6 filter-tags">
            <li class="filter-tag">
                <input type="radio" name="filter" value="all" id="all" x-model="filter">
                <label for="all">
                    All
                </label>
            </li>
            {% for type in collections.dietTypeList %}
            <li class="filter-tag">
                <input type="radio" name="filter" value="{{ type }}" id="{{ type }}" x-model="filter">
                <label for="{{ type }}">
                    {{ type | title }}
                </label>
            </li>
            {% endfor %}
        </ul>

        <nav class="mb">
            <ul>
                {% set tags = ['meal', 'sauce', 'baking', 'snack', 'drink'] %}
                {% for tag in tags %}
                <li>
                    <h3>{{ tag | title }}</h3>
                    <ul class="custom-list">
                    {% for recipe in collections[ tag ] %}
                    <li x-show="filter == 'all' || filter == '{{ recipe.data.diettype }}'">
                        <a href="{{ recipe.url }}" class="nav-link">
                        {{ recipe.data.icon }} {{ recipe.data.nav_title if recipe.data.nav_title else recipe.data.title }}
                        </a>
                    </li>
                    {% endfor %}
                    </ul>
                </li>
                {% endfor %}
            </ul>
        </nav>
    </div>
</section>

<script>
    function tags() {
      return {
            filter: 'all',
            removeFilter: function(){
                return this.filter = null;
            },
            setFilter: function(tag){
                return this.filter = tag;
            },
        }
    }
</script>

<hr/>

<section x-data="search()" class="homepage-section search" id="search">
    <div>
        <label for="myIngredient">What can I make with...?</label>
        <input list="ingredients" id="myIngredient" name="myIngredient" @input="handleChange" x-model="query" />
        <datalist id="ingredients">
        {% for ingredient in collections.ingredientList %}
            <option value="{{ ingredient }}">
        {% endfor %}
        </datalist>
        <div class="search__no-results"  x-show="query.length > 2 && !matchingRecipes.length">
            <p>üò¨üë®‚Äçüç≥ No recipes with that ü§¶‚Äç‚ôÇü§∑‚Äç‚ôÄÔ∏è</p>
            <p>Try searching <a :href="'https://www.bbcgoodfood.com/search/recipes?q=' + encodeURIComponent(query)" target="_blank">BBC Good Food</a> for <strong x-text="query"></strong>?</p>
        </div>
        <div class="search__no-input"  x-show="query.length <= 2">
            <p>ü§î</p>
        </div>
        <ul class="search__results" x-show="query.length > 2 && matchingRecipes.length">
            <template x-for="item in matchingRecipes" :key="item.url">
                <li>
                    <a class="nav-link hit-item" :href="item.url">
                        <h4 x-text="item.icon + ' ' + item.title"></h4>
                        <ul class="hit-item__ingredients">
                            <template x-for="ing in item.ingredients" :key="ing">
                                <li x-text="ing" :class="{ 'bold': ing.includes(query.toLowerCase()) }"></li>
                            </template>
                        </ul>
                    </a>
                </li>
            </template>
        </ul>
    </div>
</section>

<script>
    function search() {
        return {
            matchingRecipes: [],
            allRecipes: {},
            query: '',
            init() {
                this.fetchRecipes()
            },
            fetchRecipes: function(){
                fetch('/recipe-list.json')
                .then( r => r.json() )
                .then( r => this.allRecipes = r.recipes );
            },
            handleChange: function(e){
                this.matchingRecipes = this.allRecipes.filter(r => {
                    let matched = false;
                    r.ingredients.forEach(i => {
                        if (i.includes(this.query.toLowerCase())) {
                            matched = true;
                        }
                    })
                    return matched;
                });
            }
        }
    }
</script>

<hr/>

<section x-data="favourites()" x-init="fetchFavourites" class="homepage-section text-center favourites" id="favourites">
    <div>
        <h2>‚≠êFavourites</h2>
        <div class="favourites__no-results" x-show="!favouriteRecipes.length">
            <p>No favourite recipes yet. <a href="#list" class="accent bold">üßæ View All Recipes?</a></p>
        </div>
        <ul class="favourites__results" x-show="favouriteRecipes.length">
            <template x-for="item in favouriteRecipes" :key="item.url">
                <li>
                    <a class="nav-link" :href="item.url">
                        <h4 x-text="item.icon + ' ' + item.title"></h4>
                    </a>
                    <button x-show="inDeleteMode" @click="() => deleteFavourite(item.url)" class="favourites__delete-btn">x</button>
                </li>
            </template>
        </ul>
        <button x-text="inDeleteMode ? 'Finished!' : 'Remove favourites'" @click="toggleDeleteMode" x-show="favouriteRecipes.length" class="favourites__toggle-btn"></button>

    </div>
</section>

<script>
    function favourites() {
        return {
            favouriteRecipes: [],
            inDeleteMode: false,
            toggleDeleteMode: function() {
                this.inDeleteMode = !this.inDeleteMode;
            },
            fetchFavourites: function() {
                const favourites = JSON.parse(localStorage.getItem('favourites'));
                if (favourites) return this.favouriteRecipes = favourites;
            },
            deleteFavourite: function(recipeItemUrl){
                this.favouriteRecipes = this.favouriteRecipes.filter( f => f.url != recipeItemUrl );
                localStorage.setItem('favourites', JSON.stringify(this.favouriteRecipes));
            },
        }
    }
</script>