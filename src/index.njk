---
layout: 'home'
title: Don't Worry Chicken Curry
---

<section class="homepage-section">
    <div>
        <h1 style="margin-bottom: 2em;">
            Don't Worry
            <br>
            <span class="accent home-title-span">Chicken Curry</span>
        </h1>

        <p class="mb-16"><strong>Tried and tested recipes to enjoy</strong> 🍌</p>

        <p class="homepage-section__links">
            <a href="#list" class="homepage-section__link">🧾 Recipe List</a>
            <a href="#search" class="homepage-section__link">🔍 Search by ingredient</a>
        </p>
    </div>
</section>

<section x-data="tags()" class="homepage-section" id="list">
    <div>
        <p class="bold">Type:</p>
        <ul class="mb-6 filter-tags">
            <li class="filter-tag">
                <input type="radio" name="filter" value="all" id="all" x-model="filter">
                <label for="all">
                    All
                </label>
            </li>
            {% for type in collections.tagList %}
            <li class="filter-tag">
                <input type="radio" name="filter" value="{{ type }}" id="{{ type }}" x-model="filter">
                <label for="{{ type }}">
                    {{ type | title }}
                </label>
            </li>
            {% endfor %}
        </ul>

        <nav>
            <ul>
                {% for recipe in collections.recipes %}
                <li x-show="filter == 'all' || filter == '{{ recipe.data.tags }}'">
                    <a href="{{ recipe.url }}" class="nav-link">
                    {{ recipe.data.icon }} {{ recipe.data.nav_title if recipe.data.nav_title else recipe.data.title }}
                    </a>
                </li>
                {% endfor %}
            </ul>
        </nav>
    </div>
</section>

<script>
    function tags() {
      return {
            filter: 'all',
            removeFilter: function(){
                return this.filter = null;
            },
            setFilter: function(tag){
                return this.filter = tag;
            },
        }
    }
</script>

<section x-data="search()" x-init="fetchRecipes" class="homepage-section search" id="search">
    <div>
        <label for="myIngredient">What can I make with...?</label>
        <input list="ingredients" id="myIngredient" name="myIngredient" @input="handleChange" x-model="query" />
        <datalist id="ingredients">
        {% for ingredient in collections.ingredientList %}
            <option value="{{ ingredient }}">
        {% endfor %}
        </datalist>
        <div class="search__no-results"  x-show="query.length > 2 && !matchingRecipes.length">
            <p>😬👨‍🍳 No recipes with that 🤦‍♂️</p>
        </div>
        <div class="search__no-input"  x-show="query.length <= 2">
            <p>🤔</p>
        </div>
        <ul class="search__results" x-show="query.length > 2 && matchingRecipes.length">
            <template x-for="item in matchingRecipes" :key="item.url">
                <li>
                    <a class="nav-link hit-item" :href="item.url">
                        <h4 x-text="item.icon + ' ' + item.title"></h4>
                        <ul class="hit-item__ingredients">
                            <template x-for="ing in item.ingredients" :key="ing" x-if="matchingRecipes.length">
                                <li x-text="ing" :class="{ 'bold': ing === query }"></li>
                            </template>
                        </ul>
                    </a>
                </li>
            </template>
        </ul>
    </div>
</section>

<script>
    function search() {
        return {
            matchingRecipes: [],
            allRecipes: {},
            query: '',
            fetchRecipes: function(){
                fetch('/recipe-list.json')
                .then( r => r.json() )
                .then( r => this.allRecipes = r.recipes );
            },
            handleChange: function(e){
                this.matchingRecipes = this.allRecipes.filter(r => {
                    let matched = false;
                    r.ingredients.forEach(i => {
                        if (i.includes(this.query)) {
                            matched = true;
                        }
                    })
                    return matched;
                });
            }
        }
    }
</script>